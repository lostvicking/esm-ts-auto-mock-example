{
  "_from": "ts-auto-mock",
  "_id": "ts-auto-mock@3.5.0",
  "_inBundle": false,
  "_integrity": "sha512-E1XjMO6UWK/e+i4Ri7h8xGFCIHAb+dxgojcmPQZabQXIJatddQvqJOypg7nYCD2lPtb43HVa3bQd6uHDYV5PvQ==",
  "_location": "/ts-auto-mock",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "ts-auto-mock",
    "name": "ts-auto-mock",
    "escapedName": "ts-auto-mock",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ts-auto-mock/-/ts-auto-mock-3.5.0.tgz",
  "_shasum": "a7fed77b2564c531440236789fb9d594802dc960",
  "_spec": "ts-auto-mock",
  "_where": "/Users/victorneiman/Code/esm-ts-auto-mock-example",
  "author": {
    "name": "Vittorio Guerriero & Giulio Caprino"
  },
  "bugs": {
    "url": "https://github.com/Typescript-TDD/ts-auto-mock/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-customizable"
    },
    "cz-customizable": {
      "config": "./commitizen.js"
    }
  },
  "dependencies": {
    "lodash-es": "^4.17.21",
    "micromatch": "^4.0.4",
    "winston": "^3.3.3"
  },
  "deprecated": false,
  "description": "Typescript transformer to unlock automatic mock creation for interfaces and classes",
  "devDependencies": {
    "@commitlint/cli": "^13.1.0",
    "@commitlint/config-angular": "^13.1.0",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/github": "^7.2.3",
    "@types/jasmine": "^3.8.2",
    "@types/lodash-es": "^4.17.4",
    "@types/micromatch": "^4.0.2",
    "@types/node": "^16.4.13",
    "@typescript-eslint/eslint-plugin": "^4.29.0",
    "@typescript-eslint/parser": "^4.29.0",
    "all-contributors-cli": "6.20.0",
    "clean-webpack-plugin": "^4.0.0-alpha.0",
    "commitizen": "^4.2.4",
    "conventional-changelog-angular": "^5.0.12",
    "copy-webpack-plugin": "^9.0.1",
    "cross-env": "^7.0.3",
    "cross-var": "^1.1.0",
    "cz-customizable": "^6.3.0",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-loader": "^4.0.2",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-prettier": "^3.4.0",
    "git-branch-is": "^4.0.0",
    "husky": "^7.0.1",
    "jasmine": "^3.8.0",
    "jasmine-spec-reporter": "^7.0.0",
    "no-emit-webpack-plugin": "^4.0.1",
    "prettier": "^2.3.2",
    "regenerator-runtime": "^0.13.9",
    "semantic-release": "^17.4.4",
    "semantic-release-slack-bot": "^2.1.1",
    "ts-loader": "^9.2.5",
    "ts-node": "^10.1.0",
    "tsconfig-paths": "^3.10.1",
    "ttypescript": "1.5.12",
    "typescript": "^4.3.5",
    "webpack": "^5.49.0",
    "webpack-cli": "^4.7.2",
    "webpack-merge": "^5.8.0",
    "webpack-node-externals": "^3.0.0"
  },
  "homepage": "https://github.com/Typescript-TDD/ts-auto-mock#readme",
  "keywords": [
    "typescript",
    "spy",
    "mock",
    "auto"
  ],
  "license": "MIT",
  "name": "ts-auto-mock",
  "peerDependencies": {
    "typescript": "^4.X.X"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Typescript-TDD/ts-auto-mock.git"
  },
  "scripts": {
    "build": "npm run build:modules && npm run build:transformer",
    "build:debug": "npm run build:modules:debug && npm run build:transformer:debug",
    "build:modules": "webpack --config config/modules/webpack.js",
    "build:modules:debug": "cross-env DEBUG=true webpack --config config/modules/webpack.js",
    "build:playground": "ttsc --project ./test/playground/tsconfig.build.json",
    "build:transformer": "webpack --config config/modules/transformer/webpack.js",
    "build:transformer:debug": "cross-env DEBUG=true webpack --config config/modules/transformer/webpack.js",
    "build:transformer:definitelyTyped": "webpack --config config/modules/definitelyTypedTransformer/webpack.functions.js && webpack --config config/modules/definitelyTypedTransformer/webpack.js",
    "build:transformer:definitelyTyped:debug": "cross-env DEBUG=true webpack --config config/modules/definitelyTypedTransformer/webpack.functions.js && cross-env DEBUG=true webpack --config config/modules/definitelyTypedTransformer/webpack.js",
    "commit": "npm run cz",
    "commitlint": "commitlint -E $1",
    "contributors:add": "all-contributors add",
    "contributors:generate": "all-contributors generate",
    "cz": "git-cz",
    "dist:collect": "cp -r package.json package-lock.json README.md dist",
    "eslint": "eslint ./src/**/*.ts ./test/**/*.ts",
    "eslint:fix": "eslint --fix ./src/**/*.ts ./test/**/*.ts",
    "postversion": "cp -r package.json ../ && cp -r package-lock.json ../",
    "prettier": "node node_modules/prettier/bin-prettier.js --check **/*.{ts,json}",
    "prettier:fix": "npm run prettier -- --write",
    "release": "npm run dist:collect && semantic-release",
    "test": "npm run test:transformer && npm run test:noTransformer && npm run test:framework:context && npm run test:framework && npm run test:frameworkDeprecated && npm run test:registerMock && npm run test:createHydratedMock && npm run test:features && npm run test:filesFilter && npm run test:logs && npm run test:unit && npm run test:build",
    "test:build": "cross-env JASMINE_CONFIG=./test/build/jasmine.json TSCONFIG=./test/build/tsconfig.json npm run test:common",
    "test:common": "cross-var ts-node --files -r tsconfig-paths/register --compiler ttypescript --project $TSCONFIG node_modules/jasmine/bin/jasmine --config=$JASMINE_CONFIG",
    "test:createHydratedMock": "cross-env JASMINE_CONFIG=./test/createHydratedMock/jasmine.json TSCONFIG=./test/createHydratedMock/tsconfig.json npm run test:common",
    "test:features": "cross-env JASMINE_CONFIG=./test/features/jasmine.json TSCONFIG=./test/features/tsconfig.json npm run test:common",
    "test:filesFilter": "cross-env JASMINE_CONFIG=./test/filesFilter/jasmine.json TSCONFIG=./test/filesFilter/tsconfig.json npm run test:common",
    "test:framework": "cross-env JASMINE_CONFIG=./test/framework/jasmine.json TSCONFIG=./test/framework/tsconfig.json npm run test:common",
    "test:framework:context": "cross-env JASMINE_CONFIG=./test/frameworkContext/jasmine.json TSCONFIG=./test/frameworkContext/tsconfig.json npm run test:common",
    "test:frameworkDeprecated": "cross-env JASMINE_CONFIG=./test/frameworkContext/jasmineDeprecated.json TSCONFIG=./test/frameworkContext/tsconfig.json npm run test:common",
    "test:logs": "cross-env JASMINE_CONFIG=./test/logs/jasmine.json TSCONFIG=./test/logs/tsconfig.json npm run test:common",
    "test:noTransformer": "cross-env JASMINE_CONFIG=./test/noTransformer/jasmine.json TSCONFIG=./test/tsconfig.json npm run test:common",
    "test:playground": "cross-env JASMINE_CONFIG=./test/playground/jasmine.json TSCONFIG=./test/playground/tsconfig.json npm run test:common",
    "test:playground:build": "cross-env JASMINE_CONFIG=./test/playground/jasmine.build.json TSCONFIG=./test/playground/tsconfig.json npm run test:common",
    "test:registerMock": "cross-env JASMINE_CONFIG=./test/registerMock/jasmine.json TSCONFIG=./test/registerMock/tsconfig.json npm run test:common",
    "test:transformer": "cross-env JASMINE_CONFIG=./test/transformer/jasmine.json TSCONFIG=./test/transformer/tsconfig.json npm run test:common",
    "test:unit": "cross-env JASMINE_CONFIG=./test/unit/jasmine.json TSCONFIG=./test/tsconfig.json npm run test:common",
    "ts-check:src": "tsc --noEmit"
  },
  "version": "3.5.0"
}
